{"version":3,"file":"static/js/980.01345bd8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Contacts.js","pages/Pages.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Field = styled(FormikField)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 8px auto;\n  width: 250px;\n  padding: 4px 8px;\n  border: 2px solid #ac40e5;\n  border-radius: 5px;\n  outline: none;\n  background-color: silver;\n  color: #120318;\n  :hover,\n  :focus {\n    border: 2px solid #00bfff;\n    box-shadow: rgba(30, 144, 255, 0.3) 2px 2px 2px 0px,\n      rgba(30, 144, 255, 0.15) 4px 4px 6px 2px;\n  }\n`;\n\nexport const Btn = styled.button`\n  max-width: 120px;\n  margin: 8px auto;\n  padding: 10px 15px;\n  border: 2px solid #ac40e5;\n  border-radius: 5px;\n  font-family: SFProText-Regular, Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  background: linear-gradient(to right, #642b73, #c6426e);\n  color: #ffffff;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #b0e0e6;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-bottom: 12px;\n  font-size: 12px;\n  font-style: italic;\n  color: rgb(62 227 242);\n  width: 300px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, Btn, ErrorMessage } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore dArtagnan'\n    )\n    .required('Required'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const ifExist = contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (ifExist) {\n      alert(`${values.name}: is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px 20px 20px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const Text = styled.p`\n  padding: 10px;\n  margin: 0;\n`;\nexport const Btn = styled.button`\n  width: 70px;\n  height: 35px;\n  border: 2px solid #ac40e5;\n  border-radius: 5px;\n  background-color: silver;\n  color: #120318;\n  :hover,\n  :focus {\n    border: 2px solid #00bfff;\n    box-shadow: rgba(30, 144, 255, 0.3) 2px 2px 2px 0px,\n      rgba(30, 144, 255, 0.15) 4px 4px 6px 2px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Text, Btn } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Btn type=\"button\" onClick={handleDelete}>\n        Delete\n      </Btn>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact } from './Contact';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.length > 0 &&\n        visibleContacts.map(contact => {\n          return (\n            <Contact\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n            />\n          );\n        })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const Box = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 4px auto;\n  align-items: center;\n  text-align: center;\n`;\nexport const Text = styled.p`\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 4px 8px;\n  border: 2px solid #ac40e5;\n  border-radius: 5px;\n  outline: none;\n  background-color: silver;\n  color: #120318;\n  :hover,\n  :focus {\n    border: 2px solid #00bfff;\n    box-shadow: rgba(30, 144, 255, 0.3) 2px 2px 2px 0px,\n      rgba(30, 144, 255, 0.15) 4px 4px 6px 2px;\n  }\n`;\n","import { Box, Text, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = ({ value, onChange }) => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div>\n      <Box>\n        <Text>Find contacts by name</Text>\n        <Input type=\"text\" value={filter} onChange={onFilter} />\n      </Box>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderBox>\n      <RotatingLines\n  strokeColor=\"blue\"\n  strokeWidth=\"5\"\n  animationDuration=\"0.75\"\n  width=\"96\"\n  visible={true}\n/>\n</LoaderBox>\n  );\n};","// import { GlobalStyle } from './GlobalStyle';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from '../components/Loader/Loader';\nimport { Container, Title } from './Pages.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n      {/* <GlobalStyle /> */}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  min-height: calc(100vh - 50px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-weight: 500;\n  font-size: 48;\n  text-align: center;\n`;\n"],"names":["Form","styled","FormikForm","Field","FormikField","Btn","ErrorMessage","FormikError","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","trim","ContactSchema","Yup","shape","matches","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","resetForm","find","alert","addContact","handleSubmit","type","component","List","Item","Text","Contact","id","onClick","deleteContact","ContactList","visibleContacts","length","map","Box","Input","Filter","value","onChange","e","setFilter","target","LoaderBox","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Contacts","useEffect","fetchContacts","Container","Title"],"sourceRoot":""}